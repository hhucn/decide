{:lint-as
 {slingshot.slingshot/try+                                 clojure.core/try
  compojure.core/defroutes                                 clojure.core/def
  clojure.test.check.clojure-test/defspec                  clojure.core/def
  clojure.test.check.properties/for-all                    clojure.core/let
  clojure.java.jdbc/with-db-transaction                    clojure.core/let
  com.fulcrologic.fulcro.components/defsc                  clojure.core/defn
  com.fulcrologic.fulcro.mutations/defmutation             clojure.core/defn
  com.fulcrologic.rad.form/defsc-form                      clojure.core/defn
  com.fulcrologic.rad.report/defsc-report                  clojure.core/defn
  com.fulcrologic.fulcro.routing.dynamic-routing/defrouter clojure.core/defn
  com.fulcrologic.rad.authorization/defauthenticator       clojure.core/defn
  mount.core/defstate                                      clojure.core/def
  com.fulcrologic.guardrails.core/>defn                    clojure.core/defn
  com.fulcrologic.guardrails.core/>defn-                    clojure.core/defn-
  nubank.workspaces.core/defcard                           clojure.core/def
  com.wsscode.pathom.connect/defresolver                   clojure.core/defn
  com.wsscode.pathom.connect/defmutation                   clojure.core/defn
  com.fulcrologic.fulcro.ui-state-machines/defstatemachine clojure.core/def}
 :linters
 {:misplaced-docstring {:level :error}
  :unresolved-symbol
  {:exclude
   [(com.fulcrologic.fulcro.mutations/defmutation)
    (fulcro-spec.core/provided!)]}
  :unused-binding {:level :off}
  :unused-referred-var {:level :off}
  :unused-namespace {:level :off}
  :consistent-alias {;; warn when alias for clojure.string is
                     ;; different from str
                     :aliases {#_com.fulcrologic.fulcro.components #_comp
                               #_com.fulcrologic.fulcro.mutations #_m}}}}
